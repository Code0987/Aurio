<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:AudioAlign.WaveControls">

    <Style TargetType="{x:Type local:WaveView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WaveView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CaretOverlay}">
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CaretOverlay}">
                    <Grid>
                        <ContentPresenter/>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Canvas Name="CaretContainer">
                                <Rectangle Name="PART_Caret"
                                           Width="1" 
                                           Fill="Black" 
                                           Height="{Binding ElementName=CaretContainer, Path=ActualHeight}" 
                                           Canvas.Left="{TemplateBinding PhysicalCaretOffset}"/>
                            </Canvas>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="CaretBlink">
                                    <Storyboard RepeatBehavior="Forever">
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:01"
                                                                    Storyboard.TargetName="PART_Caret"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <DiscreteColorKeyFrame KeyTime="00:00:00.5" Value="White"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="CaretBlink"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TimeScaleCaretOverlay" BasedOn="{StaticResource {x:Type local:CaretOverlay}}" TargetType="{x:Type local:CaretOverlay}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CaretOverlay}">
                    <Grid>
                        <ContentPresenter/>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Canvas Name="CaretContainer">
                                <Thumb Name="PART_Caret" 
                                       Width="1" 
                                       Height="1" 
                                       Canvas.Left="{TemplateBinding PhysicalCaretOffset}" 
                                       Canvas.Bottom="0">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Canvas SnapsToDevicePixels="True">
                                                <Path Data="M4.5,-11.5A1,1,0,0,0,3.5,-12.5L-3.5,-12.5A1,1,0,0,0,-4.5,-11.5L-4.5,-4 -0.5,0 0.5,0 4.5,-4z" Name="Background">
                                                    <Path.Fill>
                                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                                <GradientStop Color="#FFF0EFEF" Offset="0.4" />
                                                                <GradientStop Color="#FFD6D5D5" Offset="0.8" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Path.Fill>
                                                </Path>
                                                <Path Data="M3.5,-11.5L-3.5,-11.5 -3.5,-4.5 0,-1 3.5,-4.5z" Stroke="#FFFFFFFF" StrokeThickness="1" Name="InnerBorder" />
                                                <Path Data="M4.5,-11.5A1,1,0,0,0,3.5,-12.5L-3.5,-12.5A1,1,0,0,0,-4.5,-11.5L-4.5,-4 -0.5,0 0.5,0 4.5,-4z" Stroke="#FF929292" StrokeThickness="1" Name="OuterBorder" />
                                            </Canvas>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="UIElement.IsMouseOver">
                                                    <Setter Property="Shape.Fill" TargetName="Background">
                                                        <Setter.Value>
                                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                                    <GradientStop Color="#FFB8E2F9" Offset="0.5" />
                                                                    <GradientStop Color="#FFB0DFF8" Offset="1" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                                                        <Setter.Value>
                                                            <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Trigger.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Trigger.Value>
                                                </Trigger>
                                                <Trigger Property="TextElement.Foreground">
                                                    <Setter Property="Shape.Fill" TargetName="Background">
                                                        <Setter.Value>
                                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                                    <GradientStop Color="#FFB8E2F9" Offset="0.5" />
                                                                    <GradientStop Color="#FFB0DFF8" Offset="1" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                                                        <Setter.Value>
                                                            <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Trigger.Value>
                                                        <SolidColorBrush>#FF0000FF</SolidColorBrush>
                                                    </Trigger.Value>
                                                </Trigger>
                                                <Trigger Property="Thumb.IsDragging">
                                                    <Setter Property="Shape.Fill" TargetName="Background">
                                                        <Setter.Value>
                                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Color="#FFB8E4FA" Offset="0.25" />
                                                                    <GradientStop Color="#FF5EB4E3" Offset="0.5" />
                                                                    <GradientStop Color="#FF4C8BB4" Offset="1" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                                                        <Setter.Value>
                                                            <SolidColorBrush>#FF2C628B</SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Trigger.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Trigger.Value>
                                                </Trigger>
                                                <Trigger Property="UIElement.IsEnabled">
                                                    <Setter Property="Shape.Fill" TargetName="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Shape.Stroke" TargetName="InnerBorder">
                                                        <Setter.Value>
                                                            <x:Null />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Path.Data" TargetName="OuterBorder">
                                                        <Setter.Value>
                                                            <StreamGeometry>M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z</StreamGeometry>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                                                        <Setter.Value>
                                                            <SolidColorBrush>#FFAEB1AF</SolidColorBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Trigger.Value>
                                                        <s:Boolean>False</s:Boolean>
                                                    </Trigger.Value>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Canvas>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MultiTrackListBox}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/> <!-- if set to True, smooth scrolling is disabled -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                        <local:ResizeDecorator Height="100">
                            <local:WaveView AudioStream="{Binding}" 
                                            Margin="0,2" 
                                            VirtualViewportWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MultiTrackListBox}}, Path=VirtualViewportWidth}"/>
                        </local:ResizeDecorator>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MultiTrackListBox">
                    <ScrollViewer Focusable="False" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Hidden">
                        <ScrollViewer.Template>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <local:CaretOverlay VirtualViewportWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MultiTrackListBox}}, Path=VirtualViewportWidth}" 
                                                        Style="{StaticResource TimeScaleCaretOverlay}">
                                        <local:TimeScale x:Name="PART_TimeScale" 
                                                         Grid.Column="0" 
                                                         Grid.Row="0" 
                                                         VirtualViewportWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MultiTrackListBox}}, Path=VirtualViewportWidth}"/>
                                    </local:CaretOverlay>

                                    <local:CaretOverlay Grid.Row="1" VirtualViewportWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MultiTrackListBox}}, Path=VirtualViewportWidth}">
                                        <Grid>
                                            <Border Name="invisibleBorderToForceInputEvents" Background="Transparent"/> <!-- without this, the empty parts of the scroll viewer wouldn't provoke events -->
                                            <ScrollContentPresenter/>
                                        </Grid>
                                    </local:CaretOverlay>

                                    <ScrollBar Name="PART_VerticalScrollBar"
                                               Grid.RowSpan="2"
                                               Grid.Column="1"
                                               Value="{TemplateBinding VerticalOffset}"
                                               Maximum="{TemplateBinding ScrollableHeight}"
                                               ViewportSize="{TemplateBinding ViewportHeight}"
                                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                </Grid>
                            </ControlTemplate>
                        </ScrollViewer.Template>
                        <StackPanel IsItemsHost="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MultiTrackViewer}">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF828790"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MultiTrackViewer}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" 
                            Padding="1" BorderBrush="{TemplateBinding Border.BorderBrush}" 
                            Background="{TemplateBinding Panel.Background}" 
                            Name="Bd" 
                            SnapsToDevicePixels="True">
                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <local:MultiTrackListBox x:Name="PART_TrackListBox" 
                                                     Grid.Row="1" 
                                                     Grid.Column="0" 
                                                     Grid.ColumnSpan="2" 
                                                     VirtualViewportWidth="{TemplateBinding VirtualViewportWidth}"/>

                            <ScrollBar Orientation="Horizontal" 
                                       Grid.Row="2" 
                                       Grid.Column="0"
                                       Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=VirtualViewportOffset}"
                                       Minimum="0"
                                       Maximum="100000000000"
                                       LargeChange="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ViewportSize}"
                                       ViewportSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=VirtualViewportWidth}"/>
                            
                            <ScrollBar Name="hiddenPlaceHolderForCorrectColumnWidth" 
                                       Grid.Row="0" 
                                       Grid.Column="1" 
                                       Visibility="Hidden"/>
                        </Grid>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ResizeDecorator}">
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ResizeDecorator}">
                    <Grid>
                        <ContentPresenter/>
                        <Thumb Name="PART_ResizeThumb" HorizontalAlignment="Stretch" Height="3" VerticalAlignment="Bottom" SnapsToDevicePixels="True" Visibility="Visible" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_ResizeThumb" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ResizeThumb" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger SourceName="PART_ResizeThumb" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNS"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DragDropDecorator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DragDropDecorator}">
                    <Grid>
                        <ContentPresenter/>
                        <Rectangle Name="DropMarker" Height="3" Fill="Red" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Visibility="Hidden">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="4" ShadowDepth="0" Color="Red" Opacity="1"/>
                            </Rectangle.Effect>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragOver" Value="True">
                            <Setter TargetName="DropMarker" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
